apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  name: furiosa-node-labeller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: furiosa-node-labeller
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: furiosa-node-labeller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: furiosa-node-labeller
subjects:
  - kind: ServiceAccount
    name: furiosa-node-labeller
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: furiosa-node-labeller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: furiosa-node-labeller
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: furiosa-node-labeller
    spec:
      serviceAccountName: furiosa-node-labeller
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      containers:
      - image: ghcr.io/furiosa-ai/k8s-node-labeller:0.3.0
        name: furiosa-node-labeller
        imagePullPolicy: Always
        workingDir: /opt/bin
        command: ["./k8s-node-labeller"]
        args: [
          "--interval", "60"
        ]
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: RUST_LOG
            value: "info"
        securityContext:
          privileged: true
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: sys
            mountPath: /sys
          - name: dev
            mountPath: /dev
      volumes:
        - name: sys
          hostPath:
            path: /sys
        - name: dev
          hostPath:
            path: /dev
      nodeSelector:
        kubernetes.io/os: linux
